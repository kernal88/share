选择子确定描述符，描述符确定段基地址，段基地址与偏移之和就是线性地址

CPL存放在CS寄存器的RPL字段内，每当一个代码段选择子装入CS寄存器中时，处理器自动地把CPL存放到CS的RPL字段

选择子中的描述符索引字段用13位表示，所以可区分8192个描述符。这也就是描述符表最多包含8192个描述符的原因

在改变了描述符表中的某个当前段的描述符后，也要更新对应的段描述符高速缓冲寄存器的内容，即使段选择子未作改变，这可通过重新装载段寄存器实现

只有当所执行的程序的代码和至少有一部分数据在线性地址空间和物理地址空间具有相同的地址的情况下，才能改变PG位

LDTR类似于段寄存器，由程序员可见的16位的寄存器和程序员不可见的高速缓冲寄存器组成

80386只支持256个中断/异常，所以IDT表最大长度是2K

最起码的准备工作是建立合适的全局描述符表，并使用GDTR指向该GDT.切换到保护方式时，至少要把代码段的选择子装载到CS，所以GDT中至少含有代码段的描述符
由于在切换到保护方式后就要引用GDT，所以在切换到保护方式前必须装载GDTR

原则上只要把控制寄存器CR0中的PE位置1即可

处理器转入保护模式，但CS中的内容还是实模式下代码段的段值，而不是保护模式下代码段的选择子，所以在取指令之前得把代码段的选择子装入CS

即使在关闭地址线A20时，也可进入保护模式
这种设置与实模式下只使用最低端的1M字节存储空间有关，与处理器是否工作在实模式或保护方式无关

xor     si,si
xor     di,di                  ;设置指针初值

不能从32位代码段返回实模式，这是因为无法实现从32位代码段返回时CS高速缓冲寄存器中的属性符合实模式的要求(实模式不能改变段属性)

通过在TSS中保存任务现场各寄存器状态的完整映象，实现任务的切换

一个任务可能具有四个堆栈，对应四个特权级。四个堆栈需要四个堆栈指针

发生向内层转移时，把适当的堆栈指针装入SS及ESP寄存器以变换到内层堆栈，外层堆栈的指针保存在内层堆栈中

特权级由内层向外层变换时，并不把内层堆栈的指针保存到TSS的内层堆栈指针区域
向内层转移时，总是把内层堆栈认为是一个空栈。因此，不允许发生同级内层转移的递归，一旦发生向某级内层的转移，那么返回到外层的正常途径是相匹配的向外层返回

虚拟地址空间到物理地址空间的映射由LDTR和CR3确定

TSS的地址映射寄存器区域由位于偏移1CH处的双字字段(CR3)和位于偏移60H处的字字段(LDTR)组成。在任务切换时，处理器自动从要执行任务的TSS中取出这两个字段，分别装入到寄存器CR3和LDTR。这样就改变了虚拟地址空间到物理地址空间的映射

程序改变了LDTR或CR3，那么必须把新值人为地保存到TSS中的地址映射寄存器区域相应字段中。可以通过别名技术实现此功能

从CR3中取值时，低12位被忽略。每当用MOV指令重置CR3的值时，会导致分页机制高速缓冲区的内容无效，用此方法，可以在启用分页机制之前，即把PG位置1之前，预先刷新分页机制的高速缓存。CR3寄存器即使在CR0寄存器的PG位或PE位为0时也可装入，如在实模式下也可设置CR3，以便进行分页机制的初始化
